// <auto-generated />
using System;
using GamingBlog.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GamingBlog.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20181119092931_database")]
    partial class database
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("GamingBlog.Models.Blog", b =>
                {
                    b.Property<long>("BlogID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<string>("Releasedate");

                    b.Property<string>("Title");

                    b.HasKey("BlogID");

                    b.ToTable("Blogs");

                    b.HasData(
                        new { BlogID = 1L, Content = "vel-dolores-consequatur-aliquid-excepturi-magni-exercitationem-omnis", Releasedate = "illum-magnam-dolorem-nam-dolor-sit-maxime-voluptatem", Title = "ut-rerum-enim-aut-qui-ut-rerum-et" },
                        new { BlogID = 2L, Content = "eaque-vitae-id-atque-neque-suscipit-distinctio-ut", Releasedate = "soluta-rerum-veniam-id-consequatur-ex-laboriosam-natus", Title = "voluptas-enim-qui-ab-soluta-consequuntur-similique-voluptas" },
                        new { BlogID = 3L, Content = "soluta-voluptatibus-voluptatibus-fugiat-minus-aut-nisi-accusantium", Releasedate = "deserunt-quisquam-non-fugiat-in-quo-et-eligendi", Title = "odit-aut-quis-dolorum-maxime-non-optio-dolores" },
                        new { BlogID = 4L, Content = "dolore-voluptatem-ratione-sunt-qui-quas-neque-sed", Releasedate = "est-animi-earum-et-facere-hic-explicabo-rem", Title = "quibusdam-consequatur-ipsam-molestiae-cupiditate-consequatur-reprehenderit-et" },
                        new { BlogID = 5L, Content = "sit-dolor-sit-quibusdam-saepe-odio-itaque-minus", Releasedate = "sed-ut-qui-recusandae-saepe-enim-est-repellendus", Title = "voluptas-repudiandae-et-dolor-aliquid-dolorem-consequatur-aspernatur" }
                    );
                });

            modelBuilder.Entity("GamingBlog.Models.Comment", b =>
                {
                    b.Property<long>("CommentId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CommentDate");

                    b.Property<string>("CommentText");

                    b.Property<string>("Name");

                    b.HasKey("CommentId");

                    b.ToTable("Logins");

                    b.HasData(
                        new { CommentId = 1L, CommentDate = "dignissimos-vero-distinctio-consequuntur-placeat-voluptas-itaque-quod", CommentText = "deleniti-et-ut-doloremque-repellat-quam-reprehenderit-eum", Name = "quo-eligendi-et-sequi-sint-molestiae-dolor-qui" },
                        new { CommentId = 2L, CommentDate = "sequi-ipsa-nobis-rerum-sunt-neque-et-fugiat", CommentText = "sit-eum-voluptatem-ullam-voluptas-sit-molestias-sint", Name = "dolore-nulla-vitae-natus-ex-minima-voluptatem-quaerat" },
                        new { CommentId = 3L, CommentDate = "corporis-beatae-voluptates-tempore-nulla-dolorum-ipsa-neque", CommentText = "ut-ea-aut-nihil-sequi-doloribus-ipsum-ipsam", Name = "nesciunt-optio-libero-fugit-aperiam-natus-ea-nostrum" },
                        new { CommentId = 4L, CommentDate = "laboriosam-dolorem-in-expedita-est-quia-modi-deserunt", CommentText = "nobis-qui-facilis-dolores-aliquam-sunt-maiores-error", Name = "iste-sint-pariatur-dolorem-aut-sunt-veritatis-et" },
                        new { CommentId = 5L, CommentDate = "non-ex-iste-sint-quo-consectetur-amet-numquam", CommentText = "perferendis-nulla-suscipit-soluta-eius-eum-iste-suscipit", Name = "repellendus-sequi-omnis-ea-quia-aut-omnis-ipsum" },
                        new { CommentId = 6L, CommentDate = "non-veniam-eum-hic-voluptas-cumque-vero-provident", CommentText = "ea-incidunt-magni-aliquam-est-impedit-debitis-quos", Name = "dolor-eum-voluptatem-omnis-ut-tempore-veritatis-voluptatibus" },
                        new { CommentId = 7L, CommentDate = "animi-nihil-dolor-dolorem-dolor-alias-dolorem-at", CommentText = "nostrum-sunt-maiores-molestiae-consequatur-labore-rerum-enim", Name = "quia-molestiae-deleniti-velit-labore-nemo-nisi-in" },
                        new { CommentId = 8L, CommentDate = "molestias-non-omnis-sint-consectetur-et-maxime-eius", CommentText = "earum-voluptatibus-aliquid-et-cupiditate-doloremque-facere-ea", Name = "maiores-et-ad-doloribus-aliquam-ullam-nobis-rem" },
                        new { CommentId = 9L, CommentDate = "ut-ipsum-nihil-odio-aperiam-ex-ratione-ullam", CommentText = "quod-impedit-voluptatem-aliquam-ducimus-et-distinctio-rerum", Name = "ea-minima-delectus-architecto-quisquam-ducimus-soluta-ut" },
                        new { CommentId = 10L, CommentDate = "ab-accusamus-qui-aut-sit-est-placeat-inventore", CommentText = "nulla-qui-autem-voluptatem-tempora-corporis-amet-qui", Name = "eum-voluptas-corrupti-dolorem-rerum-voluptatibus-temporibus-a" },
                        new { CommentId = 11L, CommentDate = "et-voluptas-dolore-tenetur-a-vero-vitae-natus", CommentText = "vel-laudantium-reprehenderit-dolorem-assumenda-ipsum-ut-magni", Name = "quo-ab-neque-vel-quo-dolores-a-dolores" },
                        new { CommentId = 12L, CommentDate = "culpa-ut-doloribus-fugiat-illum-reiciendis-dolore-omnis", CommentText = "voluptates-sunt-ea-consequatur-commodi-autem-aut-doloribus", Name = "a-quaerat-voluptate-eos-provident-rerum-velit-cupiditate" },
                        new { CommentId = 13L, CommentDate = "vitae-aperiam-at-qui-sunt-explicabo-delectus-reiciendis", CommentText = "sint-quisquam-autem-illo-accusamus-magnam-quod-ea", Name = "et-illum-rerum-voluptas-repudiandae-sit-illum-libero" },
                        new { CommentId = 14L, CommentDate = "nesciunt-esse-ea-quo-repellat-est-laborum-error", CommentText = "dicta-quia-placeat-repellendus-quia-autem-praesentium-vel", Name = "eius-voluptas-aliquam-soluta-consequatur-sapiente-voluptas-dolorem" },
                        new { CommentId = 15L, CommentDate = "beatae-labore-perspiciatis-architecto-voluptas-dolores-vero-sed", CommentText = "ut-est-exercitationem-cum-id-magnam-reiciendis-enim", Name = "quia-eum-sunt-rerum-quam-quae-quia-magnam" },
                        new { CommentId = 16L, CommentDate = "vel-odio-natus-molestiae-officiis-consequuntur-maxime-aut", CommentText = "nostrum-aut-quidem-omnis-aut-ut-quibusdam-tenetur", Name = "aut-consequatur-ut-perspiciatis-et-a-veniam-nihil" },
                        new { CommentId = 17L, CommentDate = "ea-qui-provident-est-architecto-in-facere-quia", CommentText = "a-sed-eligendi-quia-in-molestiae-dolore-qui", Name = "totam-harum-sint-iusto-et-dolor-beatae-accusamus" },
                        new { CommentId = 18L, CommentDate = "perferendis-sit-beatae-accusamus-odio-nulla-molestiae-animi", CommentText = "commodi-est-voluptatem-illo-deserunt-dolores-aperiam-porro", Name = "earum-sit-eum-et-et-eius-dolorem-similique" },
                        new { CommentId = 19L, CommentDate = "eum-autem-quos-ipsam-in-qui-magnam-amet", CommentText = "et-sapiente-mollitia-inventore-dolores-rerum-soluta-aut", Name = "ex-sint-aut-maiores-nulla-voluptatum-autem-eaque" },
                        new { CommentId = 20L, CommentDate = "ratione-libero-enim-aut-esse-sit-est-sed", CommentText = "rerum-ipsa-atque-et-ex-laborum-velit-voluptates", Name = "consectetur-explicabo-sapiente-rerum-voluptate-consectetur-unde-consequatur" }
                    );
                });

            modelBuilder.Entity("GamingBlog.Models.Contact", b =>
                {
                    b.Property<long>("ContactID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Message");

                    b.Property<string>("Name");

                    b.Property<string>("Subject");

                    b.HasKey("ContactID");

                    b.ToTable("Contacts");

                    b.HasData(
                        new { ContactID = 1L, Email = "est-fugit-qui-laborum-consequatur-non-beatae-qui", Message = "ut-commodi-omnis-commodi-quia-commodi-nemo-ea", Name = "rerum-excepturi-officia-qui-et-magnam-aut-exercitationem", Subject = "autem-nulla-voluptatem-voluptate-magni-neque-in-reiciendis" },
                        new { ContactID = 2L, Email = "laudantium-non-quis-dolor-nobis-repellat-omnis-sed", Message = "recusandae-laborum-quae-quas-quos-occaecati-aut-quis", Name = "aut-quasi-exercitationem-voluptas-labore-modi-incidunt-quis", Subject = "cumque-commodi-consequatur-quae-quia-provident-animi-est" },
                        new { ContactID = 3L, Email = "laborum-reiciendis-earum-id-officiis-autem-nostrum-perspiciatis", Message = "rem-similique-et-et-quia-qui-quibusdam-rerum", Name = "aut-sit-rerum-recusandae-sint-labore-culpa-sunt", Subject = "qui-rerum-distinctio-a-ea-quaerat-tempora-odio" },
                        new { ContactID = 4L, Email = "dolor-iusto-et-velit-officia-repellat-pariatur-eos", Message = "tenetur-velit-laudantium-ut-sit-tenetur-qui-rerum", Name = "iste-repellat-reiciendis-quas-ea-voluptas-sed-laudantium", Subject = "voluptatem-quas-sint-pariatur-eos-perferendis-non-perspiciatis" },
                        new { ContactID = 5L, Email = "odio-adipisci-dolor-molestiae-eum-doloremque-at-rem", Message = "quasi-et-unde-nesciunt-vel-at-dolores-dolorem", Name = "sit-repellat-ab-debitis-illum-temporibus-amet-quod", Subject = "porro-assumenda-nemo-tempore-consequatur-rerum-dicta-ut" },
                        new { ContactID = 6L, Email = "voluptatem-dolor-voluptate-nam-fugiat-consequatur-porro-molestiae", Message = "repudiandae-molestias-aut-iure-labore-accusantium-commodi-officia", Name = "eaque-unde-perferendis-deserunt-hic-aut-voluptatem-provident", Subject = "ut-doloribus-harum-error-facilis-quisquam-architecto-ut" },
                        new { ContactID = 7L, Email = "ducimus-est-ex-harum-ut-quam-impedit-et", Message = "rem-dolor-soluta-odio-ipsum-recusandae-exercitationem-nostrum", Name = "veritatis-ex-rerum-minima-perferendis-quaerat-cupiditate-maxime", Subject = "quo-fuga-vel-iure-modi-sunt-sit-voluptatem" },
                        new { ContactID = 8L, Email = "totam-rerum-fugit-accusamus-commodi-dignissimos-eligendi-quos", Message = "quia-error-consequatur-ut-culpa-dicta-sunt-sint", Name = "vel-illum-id-deleniti-quia-iusto-voluptates-dicta", Subject = "quibusdam-id-cum-et-non-aut-consequatur-corrupti" },
                        new { ContactID = 9L, Email = "quo-qui-et-suscipit-blanditiis-enim-tenetur-doloremque", Message = "qui-fugit-corporis-iste-et-cum-quas-vel", Name = "deleniti-et-illum-quisquam-vel-incidunt-rerum-ad", Subject = "dicta-amet-rerum-et-aliquam-cum-beatae-voluptas" },
                        new { ContactID = 10L, Email = "autem-in-et-atque-illo-aperiam-aperiam-eos", Message = "maiores-reiciendis-enim-cumque-molestiae-reprehenderit-facilis-aperiam", Name = "enim-animi-reprehenderit-ullam-fuga-aut-cum-similique", Subject = "est-dolor-ratione-qui-dignissimos-qui-quaerat-et" },
                        new { ContactID = 11L, Email = "molestias-architecto-rerum-vero-est-mollitia-repellendus-esse", Message = "nisi-officia-ipsam-facilis-cumque-reiciendis-rerum-ea", Name = "modi-ut-voluptatem-at-et-et-ea-fugit", Subject = "vitae-odio-rerum-pariatur-provident-aut-itaque-ipsum" },
                        new { ContactID = 12L, Email = "autem-aperiam-rerum-consequatur-quas-in-doloremque-iure", Message = "animi-pariatur-excepturi-suscipit-laboriosam-omnis-velit-non", Name = "facere-officiis-quaerat-excepturi-perferendis-sit-earum-tenetur", Subject = "consectetur-at-dolorum-atque-dignissimos-quibusdam-et-fugit" },
                        new { ContactID = 13L, Email = "et-doloribus-voluptatum-dolores-modi-sunt-nam-earum", Message = "quis-qui-voluptates-neque-tempore-est-et-et", Name = "iusto-ut-aut-eveniet-suscipit-ad-ea-eveniet", Subject = "iste-molestiae-qui-pariatur-ea-sequi-a-a" },
                        new { ContactID = 14L, Email = "qui-quisquam-maiores-blanditiis-voluptatem-alias-saepe-doloremque", Message = "minima-ratione-non-consectetur-commodi-labore-tempora-necessitatibus", Name = "fuga-ex-non-ut-ullam-dolores-illo-sint", Subject = "sit-similique-dolor-velit-nemo-natus-ipsum-minima" },
                        new { ContactID = 15L, Email = "officiis-provident-in-rerum-ipsum-quas-quidem-consequatur", Message = "amet-est-doloribus-voluptatem-est-eos-iste-non", Name = "autem-eos-officiis-et-rerum-in-facilis-nihil", Subject = "magnam-aut-reiciendis-aut-eum-sed-nemo-veritatis" },
                        new { ContactID = 16L, Email = "molestiae-ex-ut-est-neque-provident-aut-est", Message = "omnis-consequatur-soluta-doloribus-voluptate-quos-illum-aut", Name = "quos-explicabo-beatae-praesentium-magni-doloremque-iure-repellendus", Subject = "excepturi-nesciunt-earum-deleniti-voluptatem-consequuntur-veritatis-ipsum" },
                        new { ContactID = 17L, Email = "dolores-adipisci-quia-rem-nam-sed-ut-et", Message = "aperiam-voluptates-et-voluptatem-aliquid-qui-autem-et", Name = "reiciendis-consectetur-ratione-architecto-nihil-quia-labore-modi", Subject = "ut-numquam-rerum-ducimus-et-architecto-rerum-consequatur" },
                        new { ContactID = 18L, Email = "et-quisquam-maiores-quasi-hic-deserunt-molestias-sit", Message = "et-omnis-ipsa-sint-ut-sint-officiis-aspernatur", Name = "ut-non-autem-aut-iure-eaque-ut-suscipit", Subject = "voluptates-accusantium-qui-adipisci-at-consequatur-sunt-ut" },
                        new { ContactID = 19L, Email = "et-corporis-non-velit-sunt-debitis-esse-odio", Message = "iusto-saepe-qui-est-asperiores-fugiat-et-alias", Name = "illum-quod-non-dolores-quod-non-ut-et", Subject = "in-necessitatibus-velit-quia-earum-sit-culpa-quia" },
                        new { ContactID = 20L, Email = "possimus-hic-voluptas-unde-quo-saepe-consequatur-commodi", Message = "neque-possimus-optio-nulla-velit-distinctio-molestias-aperiam", Name = "nulla-rerum-magnam-quia-distinctio-autem-minima-reiciendis", Subject = "ea-animi-fugit-vel-quas-unde-nesciunt-harum" }
                    );
                });

            modelBuilder.Entity("GamingBlog.Models.Game", b =>
                {
                    b.Property<long>("GameID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Content");

                    b.Property<string>("Name");

                    b.Property<string>("Releasedate");

                    b.HasKey("GameID");

                    b.ToTable("Games");

                    b.HasData(
                        new { GameID = 1L, Content = "vitae-commodi-dolore-qui-quisquam-est-dolores-ullam", Name = "ut-non-aliquid-quia-fuga-non-dolor-accusantium", Releasedate = "laborum-et-similique-doloribus-vero-doloremque-laboriosam-perspiciatis" },
                        new { GameID = 2L, Content = "illum-dicta-voluptas-quasi-voluptatibus-dolorem-omnis-magni", Name = "est-dolorum-quae-et-cum-et-dolor-aspernatur", Releasedate = "dignissimos-exercitationem-ipsam-enim-ut-id-quod-voluptatem" },
                        new { GameID = 3L, Content = "et-totam-unde-natus-porro-accusantium-consequatur-deleniti", Name = "quam-sequi-voluptas-quo-velit-fugit-enim-unde", Releasedate = "doloremque-illo-deleniti-consequatur-neque-debitis-aliquid-sit" },
                        new { GameID = 4L, Content = "voluptatibus-assumenda-veniam-atque-quia-id-maiores-earum", Name = "fuga-explicabo-in-harum-et-nihil-voluptatem-natus", Releasedate = "voluptas-repudiandae-atque-occaecati-libero-earum-est-sit" },
                        new { GameID = 5L, Content = "minus-et-dolorem-magnam-reprehenderit-fugiat-sint-quo", Name = "minus-qui-quam-excepturi-dolorum-eius-esse-reprehenderit", Releasedate = "voluptatem-veniam-numquam-ipsam-sed-cum-fuga-id" },
                        new { GameID = 6L, Content = "et-explicabo-quis-eum-qui-quis-autem-nemo", Name = "dolor-numquam-in-hic-maxime-occaecati-ex-rerum", Releasedate = "odit-harum-ut-laboriosam-consequatur-aut-earum-fuga" },
                        new { GameID = 7L, Content = "molestiae-voluptas-quia-ut-omnis-quis-mollitia-non", Name = "qui-cum-placeat-sed-similique-id-unde-ut", Releasedate = "quasi-impedit-minus-ea-rerum-totam-facilis-et" },
                        new { GameID = 8L, Content = "dicta-repellat-ut-ullam-architecto-sed-voluptatibus-doloremque", Name = "voluptatibus-perspiciatis-facere-ullam-praesentium-magni-voluptatibus-voluptate", Releasedate = "nihil-enim-aut-et-assumenda-sequi-voluptatem-quis" },
                        new { GameID = 9L, Content = "est-quia-reiciendis-consequatur-distinctio-culpa-vero-est", Name = "ducimus-maxime-blanditiis-ea-dolorem-necessitatibus-non-vero", Releasedate = "vitae-qui-modi-accusantium-maiores-magnam-dignissimos-earum" },
                        new { GameID = 10L, Content = "maxime-hic-maiores-hic-recusandae-nostrum-eum-fugiat", Name = "aut-quo-illum-omnis-sit-ullam-vero-dignissimos", Releasedate = "natus-quisquam-pariatur-porro-tempore-culpa-et-sed" },
                        new { GameID = 11L, Content = "delectus-dolor-totam-ut-in-qui-ut-ratione", Name = "iste-voluptas-in-placeat-natus-et-quis-accusamus", Releasedate = "rerum-nobis-reprehenderit-voluptas-quasi-placeat-quo-repellendus" },
                        new { GameID = 12L, Content = "aliquid-voluptatibus-eum-maiores-amet-sint-laudantium-asperiores", Name = "vitae-dignissimos-fuga-quo-deserunt-voluptates-voluptas-quisquam", Releasedate = "blanditiis-voluptatibus-modi-eligendi-est-odit-rerum-rerum" },
                        new { GameID = 13L, Content = "nulla-tempore-officiis-dicta-non-ratione-veritatis-vero", Name = "aut-sed-voluptatibus-voluptatem-qui-sed-et-eum", Releasedate = "inventore-molestiae-nam-fugit-asperiores-expedita-ad-reiciendis" },
                        new { GameID = 14L, Content = "omnis-reprehenderit-harum-exercitationem-odio-assumenda-hic-eligendi", Name = "eveniet-cupiditate-repudiandae-quam-eveniet-veniam-a-dolorem", Releasedate = "voluptatibus-et-id-reprehenderit-molestiae-est-eveniet-suscipit" },
                        new { GameID = 15L, Content = "rem-et-dolores-commodi-illo-rerum-ab-nesciunt", Name = "nihil-at-qui-excepturi-ipsa-autem-laudantium-sapiente", Releasedate = "qui-consequuntur-aliquam-ullam-sed-perferendis-non-omnis" },
                        new { GameID = 16L, Content = "dolorem-rerum-magnam-et-et-mollitia-magni-sed", Name = "omnis-sed-sed-dolores-excepturi-voluptas-esse-consequuntur", Releasedate = "sunt-eius-porro-quae-qui-dignissimos-quia-id" },
                        new { GameID = 17L, Content = "impedit-magni-qui-voluptatibus-exercitationem-rerum-quidem-accusantium", Name = "laudantium-vero-qui-earum-quidem-officia-rerum-qui", Releasedate = "et-voluptatibus-id-quas-quo-voluptas-ducimus-autem" },
                        new { GameID = 18L, Content = "culpa-eveniet-et-nesciunt-impedit-et-assumenda-quo", Name = "vel-non-velit-esse-quidem-magnam-qui-dolor", Releasedate = "ea-repellat-tempore-expedita-rerum-voluptatum-quos-voluptatibus" },
                        new { GameID = 19L, Content = "aliquam-iste-aut-voluptas-expedita-autem-et-incidunt", Name = "consectetur-officiis-sunt-ullam-accusamus-voluptatem-et-in", Releasedate = "eius-quibusdam-error-aut-reprehenderit-modi-sit-unde" },
                        new { GameID = 20L, Content = "possimus-explicabo-odio-voluptatem-repudiandae-eum-deserunt-ea", Name = "rerum-maxime-in-in-rerum-voluptatum-ipsam-omnis", Releasedate = "omnis-commodi-tempora-omnis-nesciunt-molestiae-nemo-aliquam" }
                    );
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex");

                    b.ToTable("AspNetUsers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
